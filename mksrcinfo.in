#!/bin/bash

usage() {
  printf '%s\n' \
      'mksrcinfo v@VERSION@' \
      '' \
      'mksrcinfo reads from $PWD/PKGBUILD and writes an equivalent .SRCINFO.' \
      '' \
      'Usage: mksrcinfo [/path/to/pkgbuild]' \
      '    -h                display this help message and exit' \
      '    -o <file>         write output to <file>'
}

error() {
  printf "==> ERROR: $1\n" "${@:2}" >&2
}

die() {
  error "$@"
  exit 1
}

srcinfo_dest=$PWD/.SRCINFO

while getopts ':o:h' flag; do
  case $flag in
    o)
      srcinfo_dest=$OPTARG
      ;;
    :)
      die "option '-%s' requires an argument" "$OPTARG"
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      die "invalid option -- '-%s' (use -h for help)" "$OPTARG"
      ;;
  esac
done
shift $(( OPTIND - 1 ))

srcinfo_tmp=$(mktemp --tmpdir srcinfo.XXXXXX)
trap 'rm "$srcinfo_tmp"' EXIT

if makepkg --printsrcinfo >"$srcinfo_tmp"; then
  # use cat rather than cp or move to handle cases where $srcinfo_dest isn't a
  # regular file (e.g. /dev/stdout).
  cat "$srcinfo_tmp" >"$srcinfo_dest"
fi

# vim: set et ts=2 sw=2:
